# Generated by Django 5.2 on 2025-04-25 17:28

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('jobs', '0015_alter_joblisting_company'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaystackConfig',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_key', models.CharField(max_length=255)),
                ('secret_key', models.CharField(max_length=255)),
                ('is_live', models.BooleanField(default=False, help_text='Use live mode instead of test mode')),
                ('webhook_secret', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(default='USD', max_length=3)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Paystack Configuration',
                'verbose_name_plural': 'Paystack Configurations',
            },
        ),
        migrations.CreateModel(
            name='SubscriptionPlan',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('plan_type', models.CharField(choices=[('job_seeker', 'Job Seeker'), ('employer', 'Employer')], max_length=20)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('duration_days', models.PositiveIntegerField(default=30)),
                ('resume_builder', models.BooleanField(default=False, help_text='Access to AI resume builder')),
                ('resume_review', models.BooleanField(default=False, help_text='AI resume review and suggestions')),
                ('job_match_recommendations', models.BooleanField(default=False, help_text='AI job match recommendations')),
                ('company_recommendations', models.BooleanField(default=False, help_text='AI company match recommendations')),
                ('featured_jobs', models.BooleanField(default=False, help_text='Jobs appear as featured')),
                ('priority_listing', models.BooleanField(default=False, help_text='Jobs appear at top of search results')),
                ('candidate_matching', models.BooleanField(default=False, help_text='AI candidate matching')),
                ('advanced_analytics', models.BooleanField(default=False, help_text='Advanced job performance analytics')),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Subscription Plan',
                'verbose_name_plural': 'Subscription Plans',
                'ordering': ['price'],
            },
        ),
        migrations.CreateModel(
            name='ResumeAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('resume_file', models.FileField(blank=True, null=True, upload_to='ai_analyses/resumes/')),
                ('parsed_skills', models.JSONField(default=dict, help_text='Skills extracted from resume')),
                ('parsed_experience', models.JSONField(default=dict, help_text='Experience extracted from resume')),
                ('parsed_education', models.JSONField(default=dict, help_text='Education extracted from resume')),
                ('skill_score', models.PositiveSmallIntegerField(default=0, help_text='Score from 0-100 for skills')),
                ('experience_score', models.PositiveSmallIntegerField(default=0, help_text='Score from 0-100 for experience')),
                ('education_score', models.PositiveSmallIntegerField(default=0, help_text='Score from 0-100 for education')),
                ('overall_score', models.PositiveSmallIntegerField(default=0, help_text='Overall resume score from 0-100')),
                ('suggestions', models.JSONField(default=list, help_text='List of improvement suggestions')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_analyses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resume Analysis',
                'verbose_name_plural': 'Resume Analyses',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ResumeBuilder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_content', models.TextField(blank=True, null=True)),
                ('generated_summary', models.TextField(blank=True, null=True)),
                ('generated_skills', models.JSONField(default=list)),
                ('generated_experience', models.JSONField(default=list)),
                ('generated_education', models.JSONField(default=list)),
                ('final_content', models.TextField(blank=True, null=True)),
                ('final_file', models.FileField(blank=True, null=True, upload_to='ai_generated/resumes/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job_listing', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='targeted_resumes', to='jobs.joblisting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resume_builders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Resume Builder',
                'verbose_name_plural': 'Resume Builders',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('active', 'Active'), ('expired', 'Expired'), ('cancelled', 'Cancelled'), ('pending', 'Pending')], default='pending', max_length=20)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('transaction_id', models.CharField(blank=True, max_length=255, null=True)),
                ('payment_method', models.CharField(blank=True, max_length=50, null=True)),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('plan', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='subscriptions', to='subscriptions.subscriptionplan')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subscriptions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Subscription',
                'verbose_name_plural': 'User Subscriptions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CompanyMatchScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('culture_match', models.PositiveSmallIntegerField(default=0, help_text='Culture match percentage')),
                ('industry_match', models.PositiveSmallIntegerField(default=0, help_text='Industry match percentage')),
                ('skill_match', models.PositiveSmallIntegerField(default=0, help_text='Skill match percentage')),
                ('overall_match', models.PositiveSmallIntegerField(default=0, help_text='Overall match percentage')),
                ('match_reasons', models.JSONField(default=list, help_text='Reasons for the match')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('company', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_scores', to='jobs.company')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='company_match_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Company Match Score',
                'verbose_name_plural': 'Company Match Scores',
                'ordering': ['-overall_match'],
                'unique_together': {('user', 'company')},
            },
        ),
        migrations.CreateModel(
            name='JobMatchScore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('skills_match', models.PositiveSmallIntegerField(default=0, help_text='Skills match percentage')),
                ('experience_match', models.PositiveSmallIntegerField(default=0, help_text='Experience match percentage')),
                ('education_match', models.PositiveSmallIntegerField(default=0, help_text='Education match percentage')),
                ('overall_match', models.PositiveSmallIntegerField(default=0, help_text='Overall match percentage')),
                ('matching_skills', models.JSONField(default=list, help_text='List of matching skills')),
                ('missing_skills', models.JSONField(default=list, help_text='List of missing skills')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('job', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='match_scores', to='jobs.joblisting')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='job_match_scores', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Job Match Score',
                'verbose_name_plural': 'Job Match Scores',
                'ordering': ['-overall_match'],
                'unique_together': {('user', 'job')},
            },
        ),
    ]
